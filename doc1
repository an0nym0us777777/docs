import { useState, useEffect } from "react";
import { getNFTsForCollection } from "../api/nftApi";
import "./Gallery.css";

const Gallery = () => {
    const [currentPage, setCurrentPage] = useState(0);
    const [nftsPerPage, setNftsPerPage] = useState(20);
    const [nfts, setNfts] = useState([]);
    const [filters, setFilters] = useState({});

    const handleScroll = (event) => {
        const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;

        if (scrollHeight - scrollTop === clientHeight) {
            setCurrentPage(currentPage + 1);
        }
    };

    useEffect(() => {
        const collectionSlug = "azuki";
        const offset = currentPage * nftsPerPage;
        const limit = nftsPerPage;

        getNFTsForCollection(collectionSlug, filters, offset, limit).then((nfts) => {
            setNfts(nfts);
        });
    }, [currentPage, filters, nftsPerPage]);


    const getGemLink = (collectionAddress, tokenId) => {
        return `https://www.gem.xyz/asset/${collectionAddress}/${tokenId}`;
    };


    const handleFilterChange = (filter, value) => {
        // Update filters object with new value
        setFilters({
            ...filters,
            [filter]: value,
        });
    };

    const filteredNFTs = nfts.filter((nft) => {
        let match = true;

        Object.entries(filters).forEach(([filter, value]) => {
            if (value && !nft.traits.find((trait) => trait.trait_type === filter && trait.value.toLowerCase() === value.toLowerCase())) {
                match = false;
            } else if (!value) {
                // If the filter value is empty, do not apply the filter to the NFT
                return;
            }
        });

        console.log(nft, match); // Ajouter cette ligne pour vérifier si les filtres sont appliqués

        return match;
    });


    const openNFTModal = (nft) => {
        // Add Gem link to NFT object
        nft.gemLink = getGemLink(nft.asset_contract.address, nft.token_id);

        // Open modal to display NFT details
        // You can implement this using a library like react-modal or by creating your own custom modal component
    };


    return (
        <div className="page">
          <h2>Gallery</h2>
          <div className="filters">
            <h3>Filters</h3>
            <ul>
              <li>
                <label>
                  Background:
                  <select onChange={(e) => handleFilterChange("Background", e.target.value)}>
                    <option value="">All</option>
                    <option value="Yellow">Yellow</option>
                    <option value="Army Green">Army Green</option>
                    <option value="Aquamarine">Aquamarine</option>
                    <option value="legendary">Legendary</option>
                  </select>
                </label>
              </li>
              <li>
                <label>
                  Rarity:
                  <select onChange={(e) => handleFilterChange("rarity", e.target.value)}>
                    <option value="">All</option>
                    <option value="common">Common</option>
                    <option value="uncommon">Uncommon</option>
                    <option value="rare">Rare</option>
                    <option value="legendary">Legendary</option>
                  </select>
                </label>
              </li>
              {/* Add more filters here */}
            </ul>
          </div>
          <div className="nft-grid">
            {filteredNFTs.map((nft) => (
              <div key={nft.id} className="nft-item" onClick={() => openNFTModal(nft)}>
                <img src={nft.image_url} alt={nft.name} />
                <div className="nft-details">
                  <span>#{nft.token_id}</span>
                  <button class="gem-link-btn" onClick={() => window.open(nft.gemLink, '_blank')}>
                    <img src="https://www.gem.xyz/assets/gem.png" alt="Gem icon" />
                    <span>See on Gem.xyz</span>
                  </button>
                  {/* Add more NFT details here */}
                </div>
              </div>
            ))}
          </div>
        </div>
      );
      
};

export default Gallery;
